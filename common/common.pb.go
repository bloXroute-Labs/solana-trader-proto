// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.19.3
// source: common.proto

package common

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type OrderType int32

const (
	OrderType_OT_MARKET OrderType = 0
	OrderType_OT_LIMIT  OrderType = 1 // MARKET and LIMIT are mutually exclusive
	OrderType_OT_IOC    OrderType = 2 // immediate or cancel
	OrderType_OT_POST   OrderType = 3
)

// Enum value maps for OrderType.
var (
	OrderType_name = map[int32]string{
		0: "OT_MARKET",
		1: "OT_LIMIT",
		2: "OT_IOC",
		3: "OT_POST",
	}
	OrderType_value = map[string]int32{
		"OT_MARKET": 0,
		"OT_LIMIT":  1,
		"OT_IOC":    2,
		"OT_POST":   3,
	}
)

func (x OrderType) Enum() *OrderType {
	p := new(OrderType)
	*p = x
	return p
}

func (x OrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (OrderType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x OrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OrderType.Descriptor instead.
func (OrderType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

// Drift types : limit, trigger_market, trigger_limit, market, oracle
type PerpOrderType int32

const (
	PerpOrderType_POT_UNKNOWN        PerpOrderType = 0
	PerpOrderType_POT_MARKET         PerpOrderType = 1
	PerpOrderType_POT_LIMIT          PerpOrderType = 2
	PerpOrderType_POT_TRIGGER_MARKET PerpOrderType = 3
	PerpOrderType_POT_TRIGGER_LIMIT  PerpOrderType = 4
)

// Enum value maps for PerpOrderType.
var (
	PerpOrderType_name = map[int32]string{
		0: "POT_UNKNOWN",
		1: "POT_MARKET",
		2: "POT_LIMIT",
		3: "POT_TRIGGER_MARKET",
		4: "POT_TRIGGER_LIMIT",
	}
	PerpOrderType_value = map[string]int32{
		"POT_UNKNOWN":        0,
		"POT_MARKET":         1,
		"POT_LIMIT":          2,
		"POT_TRIGGER_MARKET": 3,
		"POT_TRIGGER_LIMIT":  4,
	}
)

func (x PerpOrderType) Enum() *PerpOrderType {
	p := new(PerpOrderType)
	*p = x
	return p
}

func (x PerpOrderType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerpOrderType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (PerpOrderType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x PerpOrderType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerpOrderType.Descriptor instead.
func (PerpOrderType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type PerpPositionSide int32

const (
	PerpPositionSide_PS_UNKNOWN PerpPositionSide = 0
	PerpPositionSide_PS_LONG    PerpPositionSide = 1
	PerpPositionSide_PS_SHORT   PerpPositionSide = 2
)

// Enum value maps for PerpPositionSide.
var (
	PerpPositionSide_name = map[int32]string{
		0: "PS_UNKNOWN",
		1: "PS_LONG",
		2: "PS_SHORT",
	}
	PerpPositionSide_value = map[string]int32{
		"PS_UNKNOWN": 0,
		"PS_LONG":    1,
		"PS_SHORT":   2,
	}
)

func (x PerpPositionSide) Enum() *PerpPositionSide {
	p := new(PerpPositionSide)
	*p = x
	return p
}

func (x PerpPositionSide) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerpPositionSide) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (PerpPositionSide) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x PerpPositionSide) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerpPositionSide.Descriptor instead.
func (PerpPositionSide) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type PostOnlyParams int32

const (
	PostOnlyParams_PO_NONE           PostOnlyParams = 0
	PostOnlyParams_PO_MUST_POST_ONLY PostOnlyParams = 1
	PostOnlyParams_PO_TRY_POST_ONLY  PostOnlyParams = 2
)

// Enum value maps for PostOnlyParams.
var (
	PostOnlyParams_name = map[int32]string{
		0: "PO_NONE",
		1: "PO_MUST_POST_ONLY",
		2: "PO_TRY_POST_ONLY",
	}
	PostOnlyParams_value = map[string]int32{
		"PO_NONE":           0,
		"PO_MUST_POST_ONLY": 1,
		"PO_TRY_POST_ONLY":  2,
	}
)

func (x PostOnlyParams) Enum() *PostOnlyParams {
	p := new(PostOnlyParams)
	*p = x
	return p
}

func (x PostOnlyParams) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostOnlyParams) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[3].Descriptor()
}

func (PostOnlyParams) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[3]
}

func (x PostOnlyParams) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostOnlyParams.Descriptor instead.
func (PostOnlyParams) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

type PerpContract int32

const (
	PerpContract_ALL        PerpContract = 0
	PerpContract_SOL_PERP   PerpContract = 1 // SOL-PERP
	PerpContract_ETH_PERP   PerpContract = 2 // ETH-PERP
	PerpContract_BTC_PERP   PerpContract = 3 // BTC-PERP
	PerpContract_APT_PERP   PerpContract = 4 // APT-PERP
	PerpContract_BONK_PERP  PerpContract = 5 // 1MBONK-PERP
	PerpContract_MATIC_PERP PerpContract = 6 // MATIC-PERP
	PerpContract_ARB_PERP   PerpContract = 7 // ARB-PERP
)

// Enum value maps for PerpContract.
var (
	PerpContract_name = map[int32]string{
		0: "ALL",
		1: "SOL_PERP",
		2: "ETH_PERP",
		3: "BTC_PERP",
		4: "APT_PERP",
		5: "BONK_PERP",
		6: "MATIC_PERP",
		7: "ARB_PERP",
	}
	PerpContract_value = map[string]int32{
		"ALL":        0,
		"SOL_PERP":   1,
		"ETH_PERP":   2,
		"BTC_PERP":   3,
		"APT_PERP":   4,
		"BONK_PERP":  5,
		"MATIC_PERP": 6,
		"ARB_PERP":   7,
	}
)

func (x PerpContract) Enum() *PerpContract {
	p := new(PerpContract)
	*p = x
	return p
}

func (x PerpContract) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerpContract) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[4].Descriptor()
}

func (PerpContract) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[4]
}

func (x PerpContract) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerpContract.Descriptor instead.
func (PerpContract) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

type PerpCollateralType int32

const (
	PerpCollateralType_PCT_DEPOSIT    PerpCollateralType = 0
	PerpCollateralType_PCT_WITHDRAWAL PerpCollateralType = 1
	PerpCollateralType_PCT_TRANSFER   PerpCollateralType = 2
)

// Enum value maps for PerpCollateralType.
var (
	PerpCollateralType_name = map[int32]string{
		0: "PCT_DEPOSIT",
		1: "PCT_WITHDRAWAL",
		2: "PCT_TRANSFER",
	}
	PerpCollateralType_value = map[string]int32{
		"PCT_DEPOSIT":    0,
		"PCT_WITHDRAWAL": 1,
		"PCT_TRANSFER":   2,
	}
)

func (x PerpCollateralType) Enum() *PerpCollateralType {
	p := new(PerpCollateralType)
	*p = x
	return p
}

func (x PerpCollateralType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerpCollateralType) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[5].Descriptor()
}

func (PerpCollateralType) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[5]
}

func (x PerpCollateralType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerpCollateralType.Descriptor instead.
func (PerpCollateralType) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

type PerpCollateralToken int32

const (
	PerpCollateralToken_PCTK_USDC PerpCollateralToken = 0
	PerpCollateralToken_PCTK_SOL  PerpCollateralToken = 1
)

// Enum value maps for PerpCollateralToken.
var (
	PerpCollateralToken_name = map[int32]string{
		0: "PCTK_USDC",
		1: "PCTK_SOL",
	}
	PerpCollateralToken_value = map[string]int32{
		"PCTK_USDC": 0,
		"PCTK_SOL":  1,
	}
)

func (x PerpCollateralToken) Enum() *PerpCollateralToken {
	p := new(PerpCollateralToken)
	*p = x
	return p
}

func (x PerpCollateralToken) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PerpCollateralToken) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[6].Descriptor()
}

func (PerpCollateralToken) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[6]
}

func (x PerpCollateralToken) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PerpCollateralToken.Descriptor instead.
func (PerpCollateralToken) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

type Infinity int32

const (
	Infinity_INF_NOT      Infinity = 0
	Infinity_INF_POSITIVE Infinity = 1
	Infinity_INF_NEGATIVE Infinity = 2
)

// Enum value maps for Infinity.
var (
	Infinity_name = map[int32]string{
		0: "INF_NOT",
		1: "INF_POSITIVE",
		2: "INF_NEGATIVE",
	}
	Infinity_value = map[string]int32{
		"INF_NOT":      0,
		"INF_POSITIVE": 1,
		"INF_NEGATIVE": 2,
	}
)

func (x Infinity) Enum() *Infinity {
	p := new(Infinity)
	*p = x
	return p
}

func (x Infinity) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Infinity) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[7].Descriptor()
}

func (Infinity) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[7]
}

func (x Infinity) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Infinity.Descriptor instead.
func (Infinity) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

type PriceImpactPercent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Percent  float64  `protobuf:"fixed64,1,opt,name=percent,proto3" json:"percent,omitempty"`
	Infinity Infinity `protobuf:"varint,2,opt,name=infinity,proto3,enum=common.Infinity" json:"infinity,omitempty"`
}

func (x *PriceImpactPercent) Reset() {
	*x = PriceImpactPercent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PriceImpactPercent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PriceImpactPercent) ProtoMessage() {}

func (x *PriceImpactPercent) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PriceImpactPercent.ProtoReflect.Descriptor instead.
func (*PriceImpactPercent) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *PriceImpactPercent) GetPercent() float64 {
	if x != nil {
		return x.Percent
	}
	return 0
}

func (x *PriceImpactPercent) GetInfinity() Infinity {
	if x != nil {
		return x.Infinity
	}
	return Infinity_INF_NOT
}

type Fee struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Amount  float32 `protobuf:"fixed32,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Mint    string  `protobuf:"bytes,2,opt,name=mint,proto3" json:"mint,omitempty"`
	Percent float32 `protobuf:"fixed32,3,opt,name=percent,proto3" json:"percent,omitempty"`
}

func (x *Fee) Reset() {
	*x = Fee{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Fee) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Fee) ProtoMessage() {}

func (x *Fee) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Fee.ProtoReflect.Descriptor instead.
func (*Fee) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *Fee) GetAmount() float32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Fee) GetMint() string {
	if x != nil {
		return x.Mint
	}
	return ""
}

func (x *Fee) GetPercent() float32 {
	if x != nil {
		return x.Percent
	}
	return 0
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x06,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x22, 0x5c, 0x0a, 0x12, 0x50, 0x72, 0x69, 0x63, 0x65, 0x49,
	0x6d, 0x70, 0x61, 0x63, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07,
	0x70, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x07, 0x70,
	0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x12, 0x2c, 0x0a, 0x08, 0x69, 0x6e, 0x66, 0x69, 0x6e, 0x69,
	0x74, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x69,
	0x6e, 0x69, 0x74, 0x79, 0x22, 0x4b, 0x0a, 0x03, 0x46, 0x65, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x61,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x02, 0x52, 0x06, 0x61, 0x6d, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6d, 0x69, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65,
	0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x02, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x65, 0x6e,
	0x74, 0x2a, 0x41, 0x0a, 0x09, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0d,
	0x0a, 0x09, 0x4f, 0x54, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x00, 0x12, 0x0c, 0x0a,
	0x08, 0x4f, 0x54, 0x5f, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x10, 0x01, 0x12, 0x0a, 0x0a, 0x06, 0x4f,
	0x54, 0x5f, 0x49, 0x4f, 0x43, 0x10, 0x02, 0x12, 0x0b, 0x0a, 0x07, 0x4f, 0x54, 0x5f, 0x50, 0x4f,
	0x53, 0x54, 0x10, 0x03, 0x2a, 0x6e, 0x0a, 0x0d, 0x50, 0x65, 0x72, 0x70, 0x4f, 0x72, 0x64, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x4f, 0x54, 0x5f, 0x55, 0x4e, 0x4b,
	0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x4f, 0x54, 0x5f, 0x4d, 0x41,
	0x52, 0x4b, 0x45, 0x54, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x4f, 0x54, 0x5f, 0x4c, 0x49,
	0x4d, 0x49, 0x54, 0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x4f, 0x54, 0x5f, 0x54, 0x52, 0x49,
	0x47, 0x47, 0x45, 0x52, 0x5f, 0x4d, 0x41, 0x52, 0x4b, 0x45, 0x54, 0x10, 0x03, 0x12, 0x15, 0x0a,
	0x11, 0x50, 0x4f, 0x54, 0x5f, 0x54, 0x52, 0x49, 0x47, 0x47, 0x45, 0x52, 0x5f, 0x4c, 0x49, 0x4d,
	0x49, 0x54, 0x10, 0x04, 0x2a, 0x3d, 0x0a, 0x10, 0x50, 0x65, 0x72, 0x70, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x53, 0x69, 0x64, 0x65, 0x12, 0x0e, 0x0a, 0x0a, 0x50, 0x53, 0x5f, 0x55,
	0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x53, 0x5f, 0x4c,
	0x4f, 0x4e, 0x47, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x53, 0x5f, 0x53, 0x48, 0x4f, 0x52,
	0x54, 0x10, 0x02, 0x2a, 0x4a, 0x0a, 0x0e, 0x50, 0x6f, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x79, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x50, 0x4f, 0x5f, 0x4e, 0x4f, 0x4e, 0x45,
	0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x50, 0x4f, 0x5f, 0x4d, 0x55, 0x53, 0x54, 0x5f, 0x50, 0x4f,
	0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x4f, 0x5f,
	0x54, 0x52, 0x59, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x5f, 0x4f, 0x4e, 0x4c, 0x59, 0x10, 0x02, 0x2a,
	0x7c, 0x0a, 0x0c, 0x50, 0x65, 0x72, 0x70, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12,
	0x07, 0x0a, 0x03, 0x41, 0x4c, 0x4c, 0x10, 0x00, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x4f, 0x4c, 0x5f,
	0x50, 0x45, 0x52, 0x50, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x45, 0x54, 0x48, 0x5f, 0x50, 0x45,
	0x52, 0x50, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x42, 0x54, 0x43, 0x5f, 0x50, 0x45, 0x52, 0x50,
	0x10, 0x03, 0x12, 0x0c, 0x0a, 0x08, 0x41, 0x50, 0x54, 0x5f, 0x50, 0x45, 0x52, 0x50, 0x10, 0x04,
	0x12, 0x0d, 0x0a, 0x09, 0x42, 0x4f, 0x4e, 0x4b, 0x5f, 0x50, 0x45, 0x52, 0x50, 0x10, 0x05, 0x12,
	0x0e, 0x0a, 0x0a, 0x4d, 0x41, 0x54, 0x49, 0x43, 0x5f, 0x50, 0x45, 0x52, 0x50, 0x10, 0x06, 0x12,
	0x0c, 0x0a, 0x08, 0x41, 0x52, 0x42, 0x5f, 0x50, 0x45, 0x52, 0x50, 0x10, 0x07, 0x2a, 0x4b, 0x0a,
	0x12, 0x50, 0x65, 0x72, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x0f, 0x0a, 0x0b, 0x50, 0x43, 0x54, 0x5f, 0x44, 0x45, 0x50, 0x4f, 0x53,
	0x49, 0x54, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x50, 0x43, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48,
	0x44, 0x52, 0x41, 0x57, 0x41, 0x4c, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x50, 0x43, 0x54, 0x5f,
	0x54, 0x52, 0x41, 0x4e, 0x53, 0x46, 0x45, 0x52, 0x10, 0x02, 0x2a, 0x32, 0x0a, 0x13, 0x50, 0x65,
	0x72, 0x70, 0x43, 0x6f, 0x6c, 0x6c, 0x61, 0x74, 0x65, 0x72, 0x61, 0x6c, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0x0d, 0x0a, 0x09, 0x50, 0x43, 0x54, 0x4b, 0x5f, 0x55, 0x53, 0x44, 0x43, 0x10, 0x00,
	0x12, 0x0c, 0x0a, 0x08, 0x50, 0x43, 0x54, 0x4b, 0x5f, 0x53, 0x4f, 0x4c, 0x10, 0x01, 0x2a, 0x3b,
	0x0a, 0x08, 0x49, 0x6e, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x79, 0x12, 0x0b, 0x0a, 0x07, 0x49, 0x4e,
	0x46, 0x5f, 0x4e, 0x4f, 0x54, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x46, 0x5f, 0x50,
	0x4f, 0x53, 0x49, 0x54, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x49, 0x4e, 0x46,
	0x5f, 0x4e, 0x45, 0x47, 0x41, 0x54, 0x49, 0x56, 0x45, 0x10, 0x02, 0x42, 0x36, 0x5a, 0x34, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x62, 0x6c, 0x6f, 0x58, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x2d, 0x4c, 0x61, 0x62, 0x73, 0x2f, 0x73, 0x6f, 0x6c, 0x61, 0x6e, 0x61, 0x2d,
	0x74, 0x72, 0x61, 0x64, 0x65, 0x72, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 8)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_common_proto_goTypes = []interface{}{
	(OrderType)(0),             // 0: common.OrderType
	(PerpOrderType)(0),         // 1: common.PerpOrderType
	(PerpPositionSide)(0),      // 2: common.PerpPositionSide
	(PostOnlyParams)(0),        // 3: common.PostOnlyParams
	(PerpContract)(0),          // 4: common.PerpContract
	(PerpCollateralType)(0),    // 5: common.PerpCollateralType
	(PerpCollateralToken)(0),   // 6: common.PerpCollateralToken
	(Infinity)(0),              // 7: common.Infinity
	(*PriceImpactPercent)(nil), // 8: common.PriceImpactPercent
	(*Fee)(nil),                // 9: common.Fee
}
var file_common_proto_depIdxs = []int32{
	7, // 0: common.PriceImpactPercent.infinity:type_name -> common.Infinity
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PriceImpactPercent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Fee); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      8,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
